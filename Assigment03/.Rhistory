demo()
b<-c[0,1,2,3,4,5,6,7,8,9]
b<-c(0,1,2,3,4,5,6,7,8,9)
b
b[2]
b[1:6]
b[-3]
b[-1]
b[-2]
b
b[-5]
b[-5:1]
##################################################
### Task      1-4                               ##
##################################################
quantile(sum(Elect15$Female,na.rm=TRUE),.28,na.rm=TRUE)
qqnorm(Elect15$LPV)
Elect15 <- read.csv("AS01.csv",header=TRUE,sep= ",",row.names = 1)
str(Elect15)
TruHist<-Elect15$Tru
hist(TruHist,main = "Trudeau supoorter saitisfaction")
LibHist<-Elect15$Lib
hist(LibHist,main = "LIB supoorter saitisfaction")
plot(TruHist,LibHist,main = "PartyLeader vs Party")
abline(lm(TruHist~LibHist))
cor.test(TruHist,LibHist)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clean workspace
rm(list=ls())
#Set work directory
setwd("~/Codes/PROG8430/Assigment03")
##################################################
### Install Libraries                           ##
##################################################
install.packages("pastecs")
install.packages("smooth")
install.packages("tseries")
install.packages("TTR")
##################################################
### Assignment 03                               ##
##################################################
##################################################
### Section 01                                  ##
##################################################
#Data Transformation
#1. Read in the Welland data and transform it into an appropriate time
#series datatype.
Temperatue<-read.csv('Welland20F',header = TRUE)
setwd("~/Codes/PROG8430/Assigment03")
Temperatue<-read.csv('Welland20F',header = TRUE)
#series datatype.
Temperatue<-read.csv('Welland20F',header = TRUE)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clean workspace
rm(list=ls())
#Set work directory
setwd("~/Codes/PROG8430/Assigment03")
install.packages("pastecs")
install.packages("smooth")
install.packages("tseries")
install.packages("TTR")
Data Transformation
#1. Read in the Welland data and transform it into an appropriate time
#series datatype.
#read data
Temperatue<-read.csv('Welland20F.csv',header = TRUE)
#convert data to time series
tsWelland_FY<-ts(Temperatue$Temp,frequency = 12,start = c(1985,1))
head(tsWelland_FY)
#Descriptive Data Analysis
#1. Summarize the precipitation information (mean, std dev, etc.)
summary(tsWelland_FY)
#2. Plot the time series data and make note of anything significant you observe.
plot.ts(tsWelland_FY,main='Averange Tempreature of Welland',ylim=c(-10,25))
#3. Decompose the times series data in to the constituent components.
#Comment on each (any trends you observe, etc.)
decoWelland_FY<-decompose(tsWelland_FY,type = 'additive')
decoWelland_FY
plot(decoWelland_FY)
#4. Determine if the time series is stationary.
library(tseries)
adf.test(tsWelland_FY)
seasonal_adj_Welland_FY<-tsWelland_FY-decoWelland_FY$seasonal
plot.ts(seasonal_adj_Welland_FY,main='Deseasonal Temperature of Welland',ylim=c(-10,25))
Precip<-read.csv('Waterloo20F.csv',header = TRUE)
head(Precip)
#convert data to time series
tsWaterloo_FY<-ts(Precip$Precip,frequency = 1,start = c(1970))
head(tsWaterloo_FY)
library(pastecs)
stat.desc(tsWaterloo_FY)
library(TTR)
WaterlooSMA10_FY<-SMA(tsWaterloo_FY,n=10)
plot.ts(WaterlooSMA10,main='Total Precipitation of Waterloo',ylim=c(670,1200))
plot.ts(WaterlooSMA10_FY,main='Total Precipitation of Waterloo',ylim=c(670,1200))
WaterlooSMA5_FY<-SMA(tsWaterloo_FY,n=5)
plot.ts(WaterlooSMA5_FY,main='Total Precipitation of Waterloo',ylim=c(670,1200))
WaterlooSMA2_FY<-SMA(tsWaterloo_FY,n=2)
plot.ts(WaterlooSMA2_FY,main='Total Precipitation of Waterloo',ylim=c(670,1200))
#4. Determine if the time series is stationary.
library(tseries)
adf.test(tsWaterloo_FY)
#p-value>0.05 non-stationary
acf(tsWaterloo_FY)
smaWaterloo_FY<-sma(tsWaterloo_FY)
smaWaterloo_FY
smaWaterloo_FY<-forecast(smaWaterloo_FY,h=5,level=0.75)
plot(smaWaterloo_FY)
smaWaterloo_FY<-sma(tsWaterloo_FY)
library(smooth)
smaWaterloo_FY<-sma(tsWaterloo_FY)
smaWaterloo_FY
smaWaterloo_FY<-forecast(smaWaterloo_FY,h=5,level=0.75)
plot(smaWaterloo_FY)
exsWaterloo_FY<-es(tsWaterloo_FY)
exsWaterloo_FY
exsWaterloo_FY<-forecast(exsWaterloo_FY,h=5,level = 0.75)
plot(exsWaterloo_FY)
smaWaterloo_FY
smaWaterloo_FY
exsWaterloo_FY
